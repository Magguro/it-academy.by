---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx-simple-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-simple-web
  template:
    metadata:
      labels:
        app: nginx-simple-web
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: nginx-pv
          mountPath: /usr/share/nginx/html
        - name: test-config-vol
          mountPath: /tmp/test/txt
          subPath: test.txt          
      restartPolicy: Always
      volumes:
      - name: nginx-pv
        persistentVolumeClaim:
          claimName: nginx-claim0
      - name: test-config-vol
        configMap:
          name: test-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr-deployment
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - name: radarr
          image: ghcr.io/linuxserver/radarr:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7878
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Europe/London
            - name: UMASK
              value: "002"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 200m
              memory: 768Mi
          volumeMounts:
            - name: radarr-pv-config
              mountPath: /config
            - name: radarr-pv-movies
              mountPath: /movies
            - name: radarr-pv-downloads
              mountPath: /downloads
      restartPolicy: Always
      volumes:
      - name: radarr-pv-config
        persistentVolumeClaim:
          claimName: radarr-claim0
      - name: radarr-pv-movies
        persistentVolumeClaim:
          claimName: radarr-claim1
      - name: radarr-pv-downloads
        persistentVolumeClaim:
          claimName: radarr-claim2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-deployment
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
        - name: sonarr
          image: linuxserver/sonarr:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8989
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Europe/London
            - name: UMASK
              value: "002"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 200m
              memory: 768Mi
          volumeMounts:
            - name: sonarr-pv-config
              mountPath: /config
            - name: sonarr-pv-tv
              mountPath: /tv
            - name: sonarr-pv-downloads
              mountPath: /downloads
      restartPolicy: Always
      volumes:
      - name: sonarr-pv-config
        persistentVolumeClaim:
          claimName: sonarr-claim0
      - name: sonarr-pv-tv
        persistentVolumeClaim:
          claimName: sonarr-claim1
      - name: sonarr-pv-downloads
        persistentVolumeClaim:
          claimName: sonarr-claim2
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    run: nginx-service
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 80
    protocol: TCP
  selector:
    app: nginx-simple-web
---
apiVersion: v1
kind: Service
metadata:
  name: radarr-service
  labels:
    run: radarr-service
spec:
  type: ClusterIP
  ports:
  - port: 7878
    protocol: TCP
  selector:
    app: radarr
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr-service
  labels:
    run: sonarr-service
spec:
  type: ClusterIP
  ports:
  - port: 8989
    protocol: TCP
  selector:
    app: sonarr
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-sa
spec:
  backend:
    serviceName: default-http-backend
    servicePort: 80
  rules:
  - host: nginx.k8s-17.sa
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx-service
          servicePort: 80
  - host: radarr.k8s-17.sa
    http:
      paths:
      - path: /
        backend:
          serviceName: radarr-service
          servicePort: 7878
  - host: sonarr.k8s-17.sa
    http:
      paths:
      - path: /
        backend:
          serviceName: sonarr-service
          servicePort: 8989
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nginx-pv
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/nginx
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-claim0
  labels:
    app: nginx-simple-web
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-config
data:
  test.txt: |
    Hi!!!!!!!!!
    I'm here!!!
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-claim0
  labels:
    app: radarr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-pv-config
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/radarr
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-claim1
  labels:
    app: radarr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-pv-movies
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/radarr
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-claim2
  labels:
    app: radarr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: radarr-pv-downloads
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/radarr
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-claim0
  labels:
    app: sonarr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-pv-config
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/sonarr
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-claim1
  labels:
    app: sonarr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-pv-tv
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/sonarr
    server: 192.168.37.105
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-claim2
  labels:
    app: sonarr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  selector:
    matchLabels:
      name: app-nfs-vol
      type: nfs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-pv-downloads
  labels:
    type: nfs
    name: app-nfs-vol
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/IT-Academy/nfs-data/sa2-17-21/inemkovich/apps/sonarr
    server: 192.168.37.105